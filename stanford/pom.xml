<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>mil.darpa.i2o</groupId>
    <version>1.7-SNAPSHOT</version>
    <relativePath>..</relativePath>
    <artifactId>deft</artifactId>
  </parent>
  <groupId>edu.stanford</groupId>
  <artifactId>stanford-adept</artifactId>
  <name>stanford</name>
<!--packaging>jar</packaging -->
  <description>The project file to build and run stanford applications using Maven</description>
<!-- Can use properties in antrun but they must be Maven properties-->
  <properties>
    <appAsmDir>${basedir}/target/appassembler</appAsmDir>
    <resourceDir>${basedir}/src/main/resources/edu/stanford/nlp</resourceDir>
  </properties>
  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <testOutputDirectory>${project.basedir}/target/test-classes</testOutputDirectory>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefirePluginVersion}</version>
        <configuration>
          <includes>
<!-- <include>**/StanfordCoreNlpUnitTester.java</include> -->
<!-- <include>**/StanfordMIMLREUnitTester.java</include> -->
          </includes>
          <excludes>
		  </excludes>
          <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
          <skipTests>${skipUnitTests}</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${execPluginVersion}</version>
        <executions>
          <execution>
            <id>StanfordCoreNlpRegression</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>${execMinMemorySize}</argument>
                <argument>${execMaxMemorySize}</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.StanfordCoreNlpRegressionTest</argument>
                <argument>${redirect}</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipRegressionTest}</skip>
            </configuration>
          </execution>
          <execution>
            <id>StanfordMIMLRERegression</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>${execMinMemorySize}</argument>
                <argument>${execMaxMemorySize}</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.kbp.slotfilling.StanfordMIMLRERegressionTest</argument>
                <argument>${redirect}</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipRegressionTest}</skip>
            </configuration>
          </execution>
          <execution>
            <id>DcorefRegression</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Xms1g</argument>
                <argument>-Xmx4g</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.dcoref.DcorefRegressionTest</argument>
                <argument>-test</argument>
                <argument>-input</argument>
                <argument>edu/stanford/nlp/input/STILLALONEWOLF_20050102.1100.eng.LDC2005E83.sgm</argument>
                <argument>-expected</argument>
                <argument>edu/stanford/nlp/reference/STILLALONEWOLF_20050102.1100.eng.LDC2005E83.reference.coref</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipRegressionTest}</skip>
            </configuration>
          </execution>
          <execution>
            <id>Benchmark Core NLP</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>${execMinMemorySize}</argument>
                <argument>${execMaxMemorySize}</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.StanfordCoreNlpBenchmarkTest</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipBenchmarkTest}</skip>
            </configuration>
          </execution>
          <execution>
            <id>Benchmark Dcoref</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>${execMinMemorySize}</argument>
                <argument>${execMaxMemorySize}</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.dcoref.DcorefBenchmarkTest</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipBenchmarkTest}</skip>
            </configuration>
          </execution>
          <execution>
            <id>StanfordCoreNlpProfiler</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>${execMinMemorySize}</argument>
                <argument>${execMaxMemorySize}</argument>
                <argument>${execNewRatio}</argument>
                <argument>-XX:+PrintGCTimeStamps</argument>
                <argument>-XX:+PrintGCDetails</argument>
                <argument>-Xloggc:${project.basedir}/target/test-classes/gc.log</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>edu.stanford.nlp.StanfordCoreNlpProfiler</argument>
              </arguments>
              <workingDirectory>${project.basedir}/target/test-classes</workingDirectory>
              <classpathScope>test</classpathScope>
              <skip>${skipProfiler}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
<!-- appassembler plugin for packaging command-line executables -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>${appassemblerPluginVersion}</version>
        <configuration>
          <assembleDirectory>${project.build.directory}/appassembler</assembleDirectory>
          <binFolder>bin</binFolder>
          <binFileExtensions>
            <unix/>
          </binFileExtensions>
          <configurationDirectory>config</configurationDirectory>
          <configurationSourceDirectory>src/main/resources</configurationSourceDirectory>
          <copyConfigurationDirectory>true</copyConfigurationDirectory>
          <extraJvmArguments/>
          <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
          <platforms>
            <platform>unix</platform>
          </platforms>
          <repositoryLayout>default</repositoryLayout>
          <repositoryName>lib</repositoryName>
          <programs>
            <program>
<!-- main class for command-line interface -->
              <mainClass>edu.stanford.nlp.StanfordCoreNlpProcessorApp</mainClass>
              <name>StanfordCoreNlpProcessorApp</name>
              <jvmSettings>
                <initialMemorySize>4g</initialMemorySize>
                <maxMemorySize>16g</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for regression test -->
              <mainClass>edu.stanford.nlp.StanfordCoreNlpRegressionTest</mainClass>
              <name>StanfordCoreNlpRegressionTest</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for core-nlp profiler -->
              <mainClass>edu.stanford.nlp.StanfordCoreNlpProfiler</mainClass>
              <name>StanfordCoreNlpProfiler</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
<!--maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize-->
                <maxMemorySize>16g</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for REST client -->
              <mainClass>edu.stanford.nlp.restapi.StanfordCoreNlpClient</mainClass>
              <name>StanfordCoreNlpClient</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for REST server -->
              <mainClass>edu.stanford.nlp.restapi.StanfordCoreNlpServer</mainClass>
              <name>StanfordCoreNlpServer</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for command-line interface -->
              <mainClass>edu.stanford.nlp.StanfordMIMLREApp</mainClass>
              <name>StanfordMIMLREApp</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for regression test -->
              <mainClass>edu.stanford.nlp.kbp.slotfilling.StanfordMIMLRERegressionTest</mainClass>
              <name>StanfordMIMLRERegressionTest</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for MIML-RE profiler -->
              <mainClass>edu.stanford.nlp.StanfordMIMLREProfiler</mainClass>
              <name>StanfordMIMLREProfiler</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>16g</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for REST client -->
              <mainClass>edu.stanford.nlp.restapi.StanfordMIMLREClient</mainClass>
              <name>StanfordMIMLREClient</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
            <program>
<!-- main class for REST server -->
              <mainClass>edu.stanford.nlp.restapi.StanfordMIMLREServer</mainClass>
              <name>StanfordMIMLREServer</name>
              <jvmSettings>
                <initialMemorySize>${appassemblerMinMemorySize}</initialMemorySize>
                <maxMemorySize>${appassemblerMaxMemorySize}</maxMemorySize>
              </jvmSettings>
            </program>
          </programs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${antrunPluginVersion}</version>
        <executions>
<!-- Set permissions on subsidiary scripts. -->
          <execution>
            <id>process-test-classes</id>
            <phase>verify</phase>
            <configuration>
              <target>
                <echo message="Maven antrun setting script permissions."/>
                <chmod dir="target/test-classes/edu/stanford/nlp/" perm="ugo+rx" includes="**/*.sh"/>
                <chmod file="target/test-classes/edu/stanford/nlp/bin.benchmark/baseline" perm="755"/>
                <chmod file="target/test-classes/edu/stanford/nlp/bin.benchmark/conlleval" perm="755"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
<!-- Creates distribution folders - - Copies readme files from src/main/resources 
						to package root - - Copies API doc to /doc - - Copies /edu from /test-classes to 
						/test -->
          <execution>
            <id>package-create</id>
            <phase>deploy</phase>
            <configuration>
              <target>
                <echo message="Maven creating package and copying data and test classes."/>
                <mkdir dir="${basedir}/deploy"/>
                <copy todir="${basedir}/deploy">
                  <fileset dir="${resourceDir}" includes="README.txt"/>
                </copy>
                <copy todir="${basedir}/deploy">
                  <fileset dir="${resourceDir}" includes="COPYRIGHT.txt"/>
                </copy>
                <mkdir dir="${appAsmDir}/data"/>
                <mkdir dir="${appAsmDir}/docs"/>
                <mkdir dir="${appAsmDir}/logs"/>
                <mkdir dir="${appAsmDir}/test"/>
                <mkdir dir="${appAsmDir}/out"/>
                <mkdir dir="${appAsmDir}/code-samples"/>
                <mkdir dir="${appAsmDir}/bin"/>
                <copy todir="${appAsmDir}/data">
                  <fileset dir="${basedir}/../data" includes="*.*"/>
                </copy>
                <copy todir="${appAsmDir}/docs">
                  <fileset dir="${basedir}/../docs" includes="*.*"/>
                </copy>
                <copy todir="${appAsmDir}/bin">
                  <fileset dir="${basedir}/target/classes" includes="**/*" excludes="*.*"/>
                </copy>
<!-- need config from src/main/resources to run regression test -->
                <copy todir="${appAsmDir}/test">
                  <fileset dir="${basedir}/target/classes" includes="**/*" excludes="*.*"/>
                </copy>
                <copy todir="${appAsmDir}/test">
                  <fileset dir="${basedir}/target/test-classes" includes="**/*" excludes="*.*"/>
                </copy>
                <copy todir="${appAsmDir}">
                  <fileset dir="${resourceDir}" includes="README.txt"/>
                </copy>
                <copy todir="${appAsmDir}">
                  <fileset dir="${resourceDir}" includes="COPYRIGHT.txt"/>
                </copy>
                <copy todir="${appAsmDir}/code-samples">
                  <fileset dir="${basedir}/src/main/java/edu/stanford/nlp" includes="*App.java"/>
                  <fileset dir="${basedir}/src/main/java/edu/stanford/nlp/restapi" includes="*Client.java"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>package-move</id>
            <phase>deploy</phase>
            <configuration>
              <target>
<!-- Sets execute permissions on all scripts - - Moves test script to/test - - Deletes scripts for other sites -->
                <echo message="Maven antrun copying binaries and setting permissions."/>
<!-- Unfortunately the ${project.parent.basedir} is not available in antrun. -->
                <copy todir="${appAsmDir}/test">
                  <fileset dir="${appAsmDir}/bin" includes="StanfordCoreNlpRegressionTest"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordMIMLRERegressionTest"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordCoreNlpProfiler"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordMIMLREProfiler"/>
                </copy>
                <delete>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordCoreNlpRegressionTest"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordMIMLRERegressionTest"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordCoreNlpProfiler"/>
                  <fileset dir="${appAsmDir}/bin" includes="StanfordMIMLREProfiler"/>
                </delete>
                <chmod file="${appAsmDir}/bin/*" perm="755" failonerror="false"/>
                <chmod file="${appAsmDir}/test/*" perm="755" failonerror="false"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
<!-- Package the software in a tarball. -->
          <execution>
            <id>package-tarball</id>
            <phase>deploy</phase>
            <configuration>
              <target>
                <echo message="Maven antrun deploying package via DeftPackage.sh."/>
                <exec executable="${basedir}/../DeftPackage.sh">
                  <arg value="${project.name}"/>
                  <arg value="${project.artifactId}-${project.parent.version}-${maven.build.timestamp}"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.1</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.1</version>
      <classifier>models</classifier>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.1</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.0</version>
      <classifier>models</classifier>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp</groupId>
      <artifactId>stanford-corenlp</artifactId>
      <version>3.3.0</version>
      <classifier>sources</classifier>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
    </dependency>
    <dependency>
      <groupId>edu.stanford.nlp.kbp.slotfilling</groupId>
      <artifactId>stanford-mimlre-model</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.java-diff-utils</groupId>
      <artifactId>diffutils</artifactId>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-ext</artifactId>
      <version>1.7.5</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>adept</groupId>
      <artifactId>adept-mapreduce</artifactId>
      <version>${project.parent.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>servlet-api-2.5</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>adept</groupId>
      <artifactId>adept-api</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
  </dependencies>
</project>
